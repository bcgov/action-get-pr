name: Get PR Number
description: Get PR number for merge queues, squash merges, and releases
branding:
  icon: package
  color: blue

inputs:
  ### Required
  # Nothing!

  ### Typical / recommended
  # Nothing!

  ### Usually a bad idea / not recommended
  debug:
    description: Enable debug logging
    default: 'false'
  token:
    description: Specify token (GH or PAT), instead of inheriting one from the calling workflow
    default: ${{ github.token }}

outputs:
  pr:
    description: 'Associated pull request number'
    value: ${{ steps.vars.outputs.pr }}

runs:
  using: composite
  steps:
    - uses: actions/checkout@v4
    - id: vars
      shell: bash
      run: |
        # Helper functions
        function log_debug() {
          if [ "${{ inputs.debug }}" == "true" ]; then
            echo "DEBUG: $1"
          fi
        }

        function get_pr_from_api() {
          local response
          response=$(curl -sL -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ inputs.token }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            "$1")

          if [ $? -ne 0 ]; then
            echo "API request failed" >&2
            return 1
          fi

          echo "$response"
        }

        function get_pr_from_git() {
          git log -1 --pretty=format:%s | grep -o '#[0-9]\+' | grep -o '[0-9]\+'
        }

        # Process variables and inputs
        if [ ${{ github.event_name }} == 'pull_request' ]
        then
          echo "Event type: pull request"
          pr=${{ github.event.number }}
        elif [ ${{ github.event_name }} == 'merge_group' ]
        then
          echo "Event type: merge queue"
          pr=$(echo ${{ github.event.merge_group.head_ref }} | grep -Eo "queue/main/pr-[0-9]+" | cut -d '-' -f2)
        elif [ ${{ github.event_name }} == 'push' ]
        then
          echo "Event type: push"
          api_response=$(get_pr_from_api "https://api.github.com/repos/${{ github.repository }}/commits/${{ github.event.after }}/pulls")
          pr=$(echo "$api_response" | jq .[0].number)

          if [ -z "${pr}" ] || [ "${pr}" = "null" ]; then
            log_debug "API method failed, trying git history"
            pr=$(get_pr_from_git)
          fi
        elif [ ${{ github.event_name }} == 'release' ]
        then
          echo "Event type: release"
          # Try API first
          api_response=$(get_pr_from_api "https://api.github.com/search/issues?q=repo:${{ github.repository }}+is:pr+is:merged+sort:updated-desc")
          pr=$(echo "$api_response" | jq .items[0].number)

          # Fallback to git history if API fails
          if [ -z "${pr}" ] || [ "${pr}" = "null" ]; then
            log_debug "API method failed, trying git history"
            pr=$(get_pr_from_git)
          fi

          # Final fallback message
          if [ -z "${pr}" ]
          then
            echo "No PR number found through API or git history"
            pr=""
          fi
        else
          echo "Event type: unknown or unexpected"
          exit 1
        fi

        # Debug output
        log_debug "Event: ${{ github.event_name }}"
        log_debug "SHA: ${{ github.sha }}"
        log_debug "Found PR: ${pr}"

        # Validate PR number
        if [[ ! "${pr}" =~ ^[0-9]+$ ]]; then
          echo "PR number format incorrect: ${pr}"
          exit 1
        fi

        # Output PR number
        echo "Summary ---"
        echo -e "\tPR: ${pr}"
        echo "pr=${pr}" >> $GITHUB_OUTPUT
